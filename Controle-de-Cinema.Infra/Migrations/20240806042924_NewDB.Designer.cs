// <auto-generated />
using System;
using Controle_de_Cinema.Infra.Compartilhado;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Controle_de_Cinema.Infra.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    [Migration("20240806042924_NewDB")]
    partial class NewDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Assento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Sala_Id")
                        .HasColumnType("int");

                    b.Property<int?>("SessaoId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Sala_Id");

                    b.HasIndex("SessaoId");

                    b.ToTable("TBAssento", (string)null);
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Duracao")
                        .HasColumnType("time");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TBfilme", (string)null);
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Ingresso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssentoId")
                        .HasColumnType("int");

                    b.Property<int>("Sessao_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("Tipo")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("AssentoId");

                    b.HasIndex("Sessao_Id");

                    b.ToTable("TBIngresso", (string)null);
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TBPessoa", (string)null);
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDaSala")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TBSala", (string)null);
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Sessao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Filme_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("FimDaSessao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InicioDaSessao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Sala_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Filme_Id");

                    b.HasIndex("Sala_Id");

                    b.ToTable("TBSessao", (string)null);
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Assento", b =>
                {
                    b.HasOne("Controle_de_Cinema.Dominio.Sala", "Sala")
                        .WithMany("Assentos")
                        .HasForeignKey("Sala_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Controle_de_Cinema.Dominio.Sessao", null)
                        .WithMany("Assentos")
                        .HasForeignKey("SessaoId");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Ingresso", b =>
                {
                    b.HasOne("Controle_de_Cinema.Dominio.Assento", "Assento")
                        .WithMany()
                        .HasForeignKey("AssentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Controle_de_Cinema.Dominio.Sessao", "Sessao")
                        .WithMany("Ingressos")
                        .HasForeignKey("Sessao_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assento");

                    b.Navigation("Sessao");
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Sessao", b =>
                {
                    b.HasOne("Controle_de_Cinema.Dominio.Filme", "Filme")
                        .WithMany()
                        .HasForeignKey("Filme_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Controle_de_Cinema.Dominio.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("Sala_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Filme");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Sala", b =>
                {
                    b.Navigation("Assentos");
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Sessao", b =>
                {
                    b.Navigation("Assentos");

                    b.Navigation("Ingressos");
                });
#pragma warning restore 612, 618
        }
    }
}
