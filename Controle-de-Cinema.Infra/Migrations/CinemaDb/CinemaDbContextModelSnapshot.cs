// <auto-generated />
using System;
using Controle_de_Cinema.Infra.Compartilhado;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Controle_de_Cinema.Infra.Migrations.CinemaDb
{
    [DbContext(typeof(CinemaDbContext))]
    partial class CinemaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Assento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("SessaoId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("sala_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessaoId");

                    b.HasIndex("sala_Id");

                    b.ToTable("TBAssento", (string)null);
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Duracao")
                        .HasColumnType("time");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasColumnType("varchar(600)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TBfilme", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duracao = new TimeSpan(0, 1, 36, 0, 0),
                            Genero = 8,
                            ImagemUrl = "https://upload.wikimedia.org/wikipedia/en/0/05/Up_%282009_film%29.jpg",
                            Nome = "UP - Altas Aventuras"
                        },
                        new
                        {
                            Id = 2,
                            Duracao = new TimeSpan(0, 2, 23, 0, 0),
                            Genero = 0,
                            ImagemUrl = "https://upload.wikimedia.org/wikipedia/en/f/f9/TheAvengers2012Poster.jpg",
                            Nome = "Os Vingadores"
                        },
                        new
                        {
                            Id = 3,
                            Duracao = new TimeSpan(0, 2, 7, 0, 0),
                            Genero = 1,
                            ImagemUrl = "https://upload.wikimedia.org/wikipedia/en/e/e7/Jurassic_Park_poster.jpg",
                            Nome = "Jurassic Park"
                        },
                        new
                        {
                            Id = 4,
                            Duracao = new TimeSpan(0, 1, 57, 0, 0),
                            Genero = 2,
                            ImagemUrl = "https://upload.wikimedia.org/wikipedia/en/3/35/Biglebowskiposter.jpg",
                            Nome = "O Grande Lebowski"
                        },
                        new
                        {
                            Id = 5,
                            Duracao = new TimeSpan(0, 3, 15, 0, 0),
                            Genero = 3,
                            ImagemUrl = "https://upload.wikimedia.org/wikipedia/en/3/38/Schindler%27s_List_movie.jpg",
                            Nome = "A Lista de Schindler"
                        },
                        new
                        {
                            Id = 6,
                            Duracao = new TimeSpan(0, 2, 58, 0, 0),
                            Genero = 4,
                            ImagemUrl = "https://upload.wikimedia.org/wikipedia/en/8/87/Ringstrilogyposter.jpg",
                            Nome = "O Senhor dos Anéis: A Sociedade do Anel"
                        },
                        new
                        {
                            Id = 7,
                            Duracao = new TimeSpan(0, 2, 2, 0, 0),
                            Genero = 5,
                            ImagemUrl = "https://upload.wikimedia.org/wikipedia/en/6/6b/Exorcist_ver2.jpg",
                            Nome = "O Exorcista"
                        },
                        new
                        {
                            Id = 8,
                            Duracao = new TimeSpan(0, 2, 4, 0, 0),
                            Genero = 6,
                            ImagemUrl = "https://upload.wikimedia.org/wikipedia/en/8/86/Posternotebook.jpg",
                            Nome = "Diário de uma Paixão"
                        },
                        new
                        {
                            Id = 9,
                            Duracao = new TimeSpan(0, 1, 58, 0, 0),
                            Genero = 7,
                            ImagemUrl = "https://upload.wikimedia.org/wikipedia/en/8/86/The_Silence_of_the_Lambs_poster.jpg",
                            Nome = "O Silêncio dos Inocentes"
                        },
                        new
                        {
                            Id = 10,
                            Duracao = new TimeSpan(0, 2, 35, 0, 0),
                            Genero = 9,
                            ImagemUrl = "https://upload.wikimedia.org/wikipedia/en/8/8d/Gladiator_ver1.jpg",
                            Nome = "Gladiador"
                        });
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Ingresso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssentoId")
                        .HasColumnType("int");

                    b.Property<int>("Sessao_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("Tipo")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("AssentoId");

                    b.HasIndex("Sessao_Id");

                    b.ToTable("TBIngresso", (string)null);
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDaSala")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TBSala", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacidade = 30,
                            NumeroDaSala = "Pequena 01"
                        },
                        new
                        {
                            Id = 2,
                            Capacidade = 45,
                            NumeroDaSala = "Pequena 02"
                        },
                        new
                        {
                            Id = 3,
                            Capacidade = 80,
                            NumeroDaSala = "Média 01"
                        },
                        new
                        {
                            Id = 4,
                            Capacidade = 110,
                            NumeroDaSala = "Média 02"
                        },
                        new
                        {
                            Id = 5,
                            Capacidade = 180,
                            NumeroDaSala = "Grande 01"
                        },
                        new
                        {
                            Id = 6,
                            Capacidade = 200,
                            NumeroDaSala = "Grande 02"
                        });
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Sessao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Filme_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("FimDaSessao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InicioDaSessao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Sala_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Filme_Id");

                    b.HasIndex("Sala_Id");

                    b.ToTable("TBSessao", (string)null);
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Assento", b =>
                {
                    b.HasOne("Controle_de_Cinema.Dominio.Sessao", null)
                        .WithMany("Assentos")
                        .HasForeignKey("SessaoId");

                    b.HasOne("Controle_de_Cinema.Dominio.Sala", "Sala")
                        .WithMany("Assentos")
                        .HasForeignKey("sala_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Ingresso", b =>
                {
                    b.HasOne("Controle_de_Cinema.Dominio.Assento", "Assento")
                        .WithMany()
                        .HasForeignKey("AssentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Controle_de_Cinema.Dominio.Sessao", "Sessao")
                        .WithMany("Ingressos")
                        .HasForeignKey("Sessao_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assento");

                    b.Navigation("Sessao");
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Sessao", b =>
                {
                    b.HasOne("Controle_de_Cinema.Dominio.Filme", "Filme")
                        .WithMany()
                        .HasForeignKey("Filme_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Controle_de_Cinema.Dominio.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("Sala_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Filme");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Sala", b =>
                {
                    b.Navigation("Assentos");
                });

            modelBuilder.Entity("Controle_de_Cinema.Dominio.Sessao", b =>
                {
                    b.Navigation("Assentos");

                    b.Navigation("Ingressos");
                });
#pragma warning restore 612, 618
        }
    }
}
